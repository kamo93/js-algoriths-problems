{"version":3,"sources":["as-react-ink.js"],"names":[],"mappings":"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","file":"cli.js","sourcesContent":["import React, { useState } from 'react';\nimport fs from 'fs';\nimport {render, Text, Box, Spacer, useInput, useApp, Static} from 'ink';\n// '■' : '□'\n//\n\nconst optionsTest = () => [\n\t{ text: 'option 1 ', active: true },\n\t{ text: 'option 2 ', active: true },\n\t{ text: 'option 3 ', active: true },\n\t{ text: 'option 4 ', active: true },\n]\n\nconst init = () => {\n\tconst projects = fs.readdirSync('./src');\n\treturn projects.map((name, index) => ({text: `  ${name}`, active: index === 0}));\n}\n\n/*\n * @description move the options active, direction 1 down and -1 up \n * @params direction: number\n */\nconst updateOptions = (direction, options) => {\n\tconst actualActiveIndex = options.findIndex(({active}) => active);\n\tconsole.log('actualActiveIndex', actualActiveIndex);\n\tconst newIndex = direction + actualActiveIndex;\n\tconsole.log('newIndex', newIndex);\n\toptions[newIndex].active = true;\n\toptions[actualActiveIndex].active = false;\n\tconsole.log(options)\n\treturn options\n}\n\nconst Demo = () => {\n\tconst [options, setOptions] = useState(init());\n\tconst { exit } = useApp();\n\n\tuseInput((input, key) => {\n\t\tconsole.log(input, key)\n\t\tif(key.upArrow){\n\t\t\tconsole.log('here')\n\t\t\tconst auxOptions = updateOptions(-1, options)\n\t\t\tconsole.log('auxOptions', auxOptions);\n\t\t\tsetOptions(optionsTest);\n\t\t}\n\n\t\tif(key.downArrow){\n\t\t\tconsole.log('here 3')\n\t\t\tconst auxOptions = updateOptions(1, options)\n\t\t\tconsole.log('auxOptions', auxOptions);\n\t\t\tsetOptions(auxOptions);\n\t\t}\n\n\t\tif(key.escape) {\n\t\t\texit();\n\t\t}\n\t})\n\n\tconsole.log(options)\n\n\treturn (\n\t\t<Box flexDirection=\"column\">\n\t\t\t<Box>\n\t\t\t\t<Text>Seleccione una de las siguientes opciones</Text>\n\t\t\t</Box>\n\t\t\t<Spacer />\n\t\t\t<Box flexDirection=\"column\">\n\t\t\t\t{\n\t\t\t\t\toptions.map(({text, active}) => (\n\t\t\t\t\t\t<Text key={text}>{active? '■' : '□'} {text}</Text>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</Box>\n\t\t</Box>\n\t)\n};\n\ninit();\nrender(<Demo />);\n"]}